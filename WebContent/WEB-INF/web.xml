<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  
  <!-- ContextLoaderListener 설정  -->
  	<listener>
  		<listener-class>com.myCompany.web.contextlistener.ContextLoaderListener</listener-class>
  	</listener>
  
  	<context-param>
  		<param-name>contextConfigLocation</param-name>
  	 	<param-value>/WEB-INF/applicationContext.xml</param-value>
  	</context-param>
  
  <!-- CharacterEncodingFilter 설정  -->
  
  <filter>
  	<filter-name>CharacterEncodingFilter</filter-name>
  	<filter-class>com.myCompany.web.filter.ChracterEncodingFilter</filter-class>
  	<init-param>
  		<param-name>encoding</param-name>
  		<param-value>UTF-8</param-value>
  	</init-param>
  </filter>
  
  <filter-mapping>
  	<filter-name>CharacterEncodingFilter</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  
  
  <!-- dispatcherservlet1 설정  -->
  
  
  <servlet>
  
  	<servlet-name>dispatcher1</servlet-name>
    <servlet-class>com.myCompany.web.servlet.DispatcherServlet1</servlet-class>
    <load-on-startup>1</load-on-startup> <!-- 빠르게 객체 생성하자 -->
  </servlet>
  
  <servlet-mapping>
  
  	<servlet-name>dispatcher1</servlet-name>
  	<url-pattern>/dispatcher1</url-pattern> <!-- http://localhost:8080/servletJspProgramming이 생략  -->
  
  
  </servlet-mapping>
  
  
  
  <!-- dispatcherservlet2 설정  -->
  
  <servlet>
  
 	 <servlet-name>dispatcher2</servlet-name>
 	 <!-- <servlet-class>com.myCompany.web.servlet.DispatcherServlet1</servlet-class>
 	 
  	 
  	 <init-param>
  	 	<param-name>x</param-name>
  	 	<param-value>50</param-value>
  	 </init-param>
  	 
  	 <init-param>
  	 	<param-name>y</param-name>
  	 	<param-value>100</param-value>
  	 </init-param> -->
  	 
  	 
  	 <servlet-class>com.myCompany.web.servlet.DispatcherServlet2</servlet-class>
  	 
  	 <init-param>
  	 	<param-name>contextConfigLocation</param-name>
  	 	<param-value>/WEB-INF/servletContext.xml</param-value>
  	 </init-param>
  	 
  	 <load-on-startup>1</load-on-startup>
  	 
  	 
  	 
  	 
  </servlet>
  
  <servlet-mapping>
  
  	<servlet-name>dispatcher2</servlet-name>
  	<url-pattern>/dispatcher2</url-pattern> <!-- http://localhost:8080/servletJspProgramming이 생략  -->
  
  
  </servlet-mapping>
  
  
  <!-- dispatcherservlet3 설정  -->
  
  
  <servlet>
  
  	<servlet-name>dispatcher3</servlet-name>
    <servlet-class>com.myCompany.web.servlet.DispatcherServlet3</servlet-class>
    <load-on-startup>1</load-on-startup> <!-- 빠르게 객체 생성하자 -->
  </servlet>
  
  <servlet-mapping>
  
  	<servlet-name>dispatcher3</servlet-name>
  	<url-pattern>/dispatcher3</url-pattern> <!-- http://localhost:8080/servletJspProgramming이 생략  -->
  
  
  </servlet-mapping>
  
   <servlet>
  
  	<servlet-name>dispatcher4</servlet-name>
    <servlet-class>com.myCompany.web.servlet.DispatcherServlet4</servlet-class>
    <load-on-startup>1</load-on-startup> <!-- 빠르게 객체 생성하자 -->
  </servlet>
  
  <servlet-mapping>
  
  	<servlet-name>dispatcher4</servlet-name>
  	<url-pattern>/dispatcher4</url-pattern> <!-- http://localhost:8080/servletJspProgramming이 생략  -->
  
  
  </servlet-mapping>
  
  <servlet>
  
  	<servlet-name>dispatcher5</servlet-name>
    <servlet-class>com.myCompany.web.servlet.DispatcherServlet5</servlet-class>
    <load-on-startup>1</load-on-startup> <!-- 빠르게 객체 생성하자 -->
  </servlet>
  
  <servlet-mapping>
  
  	<servlet-name>dispatcher5</servlet-name>
  	<url-pattern>/dispatcher5</url-pattern> <!-- http://localhost:8080/servletJspProgramming이 생략  -->
  
  
  </servlet-mapping>
  
  <servlet>
  
  	<servlet-name>dispatcher6</servlet-name>
    <servlet-class>com.myCompany.web.servlet.DispatcherServlet6</servlet-class>
    <load-on-startup>1</load-on-startup> <!-- 빠르게 객체 생성하자 -->
  </servlet>
  
  <servlet-mapping>
  
  	<servlet-name>dispatcher6</servlet-name>
  	<url-pattern>/dispatcher6</url-pattern> <!-- http://localhost:8080/servletJspProgramming이 생략  -->
  
  
  </servlet-mapping>
  
  <servlet>
  
  	<servlet-name>dispatcher7</servlet-name>
    <servlet-class>com.myCompany.web.servlet.DispatcherServlet7</servlet-class>
    <load-on-startup>1</load-on-startup> <!-- 빠르게 객체 생성하자 -->
  </servlet>
  
  <servlet-mapping>
  
  	<servlet-name>dispatcher7</servlet-name>
  	<url-pattern>/dispatcher7</url-pattern> <!-- http://localhost:8080/servletJspProgramming이 생략  -->
  
  
  </servlet-mapping>
  
  <servlet>
  
  	<servlet-name>dispatcher8</servlet-name>
    <servlet-class>com.myCompany.web.servlet.DispatcherServlet8</servlet-class>
    <load-on-startup>1</load-on-startup> <!-- 빠르게 객체 생성하자 -->
  </servlet>
  
  <servlet-mapping>
  
  	<servlet-name>dispatcher8</servlet-name>
  	<url-pattern>/dispatcher8</url-pattern> <!-- http://localhost:8080/servletJspProgramming이 생략  -->
  
  
  </servlet-mapping>
  
  
  
</web-app>